trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: flask-ec2-pipeline

stages:
- stage: Build
  jobs:
  - job: BuildAndPackage
    steps:
    - checkout: self

    - task: Docker@2
      displayName: Build Docker Image
      inputs:
        command: build
        dockerfile: $(Build.SourcesDirectory)/Dockerfile   # Explicit Dockerfile path
        buildContext: $(Build.SourcesDirectory)            # Explicit context
        tags: |
          $(imageName):latest

    - script: docker images
      displayName: List Docker Images

    - script: |
        docker save $(imageName):latest -o $(Build.ArtifactStagingDirectory)/$(imageName).tar
      displayName: Save Docker Image to .tar

    - publish: $(Build.ArtifactStagingDirectory)/$(imageName).tar
      artifact: image

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: DeployToEC2
    steps:
    - download: current
      artifact: image

    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: EC2-SSH
        sourceFolder: $(Pipeline.Workspace)/image
        contents: '**'
        targetFolder: /home/ec2-user

    - task: SSH@0
      inputs:
        sshEndpoint: EC2-SSH
        runOptions: inline
        inline: |
          cd /home/ec2-user
          docker load -i $(imageName).tar
          docker rm -f $(imageName) || true
          docker run -d --name $(imageName) -p 80:5000 $(imageName):latest


